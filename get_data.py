'''

Script to plot the band structure along high symmetry lines of a hexagonal lattice, 
i.e. along the k-points gamma, M, K, gamma.
Can be modified to accommodate different k-points.

Required files in the directory (as generated by vasp): EIGENVAL, DOSCAR

'''

import sys
import numpy as np
import matplotlib.pyplot as plt
import matplotlib

#set font size of plot labels
matplotlib.rcParams.update({'font.size':18})

title = sys.argv[1]
yl = 30

f = open('EIGENVAL','r')
f2 = open('DOSCAR','r')


lines = f.readlines()
nbands = int(lines[5].split()[2])

bands = {}
#structure of bands dictionary:
#    key: band number
#    value: [(x1,y1),(x2,y2),...,(xn,yn)] where the tuples are the coordinates to plot

#initialize arrays for each dictionary entry
for i in range(nbands):
    bands[i] = []    

#get Fermi energy
f2lines=f2.readlines()
ef = [float(k) for k in f2lines[5].split()][3]


#initialize placeholders for x-values
current_x = 0.
prev = 0.
l7 = [float(x) for x in lines[7].split()]
origin = l7[0:3]
hsyspoints = [[0.5000000E+00,  0.5000000E+00,  0.5000000E+00], [0.0000000E+00,  0.0000000E+00,  0.0000000E+00], \
            [0.0000000E+00,  0.5000000E+00,  0.5000000E+00], [0.2500000E+00,  0.6250000E+00,  0.6250000E+00], \
            [0.3750000E+00,  0.7500000E+00,  0.3750000E+00]]
for line in lines[6:]:
    floats = [float(x) for x in line.split()]
    if len(floats)==4:
        current_x = current_x + np.sqrt((floats[0]-origin[0])**2 + (floats[1]-origin[1])**2 + (floats[2]-origin[2])**2)
        origin = floats[0:3]
    if len(floats)==3: 
        n = int(floats[0])-1 #n = band number
        bands[n] += [(current_x,floats[1]-ef)]


#set figure size
plt.figure(figsize=(7,21))

#begin plotting
for i in range(8):
    bands[i] = sorted(bands[i],key=lambda y: y[0])
    plt.plot([a[0] for a in bands[i]], [a[1] for a in bands[i]])

#draw lines to indicate k-points and Fermi energy
plt.axhline(0,color='black',label="$E_f$")
plt.axvline(0.5,color='gray',label="M")
plt.axvline(0.5+np.sqrt(5)/6,color='gray',label="K")

#label the graph
print(ef)
xmax=max([a[0] for a in bands[1]])
plt.text(xmax,0,"$E_f$",fontsize=22)
plt.text(0.487,-yl-0.4,"$M$",fontsize=24)
plt.text(0.5+np.sqrt(5)/6-0.009,-yl-0.4,"$K$",fontsize=24)
plt.text(-0.003,-yl-0.4,"$\Gamma$",fontsize=24)
plt.text(xmax-0.003,-yl-0.4,"$\Gamma$",fontsize=24)
plt.ylabel("eV")
plt.title(title)
#plt.tick_params(axis='x',which='both',bottom='off',labelbottom='off')

#limit the graph such that you only see bands close to the Fermi level
plt.xlim(0,xmax)
plt.ylim(-20,+25)

f.close()
f2.close()

#plt.savefig("/home/" + title + "_band.png")

plt.show()
